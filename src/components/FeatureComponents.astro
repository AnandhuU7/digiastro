---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

const feature: CollectionEntry<"feature">[] = await getCollection("feature");

// Add SEO metadata
const title = "Hikvision Security Solutions | Premium Security Technology";
const description = "Professional Hikvision security solutions featuring expert installation, 24/7 support, and comprehensive warranty coverage. Access cutting-edge surveillance technology at competitive prices.";
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const image = "https://dubai-hikvision.com/logo.png";

// Generate dynamic SEO keywords and descriptions based on features
const featureKeywords = feature.map(f => f.data.name).join(", ");
const featureDescriptions = feature.map(f => f.data.body).join(" ");
const seoKeywords = `Hikvision, Security Solutions, ${featureKeywords}, Surveillance, CCTV, Access Control`;
const seoDescription = `${description} ${featureDescriptions}`;
---

<!-- Add SEO meta tags -->
<head>
  <title>{title}</title>
  <meta name="description" content={title} />
  <meta name="keywords" content={seoKeywords} />
  <meta name="robots" content="index, follow" />
  <link rel="canonical" href={canonicalURL} />
  
  <!-- Open Graph / Social Media Meta Tags -->
  <meta property="og:title" content={title} />
  <meta property="og:description" content={seoDescription} />
  <meta property="og:type" content="website" />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:image" content={image} />
  
  <!-- Twitter Card Meta Tags -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={seoDescription} />
  <meta name="twitter:image" content={image} />
  
  <!-- Schema.org structured data -->
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Product",
      "name": "Hikvision Security Solutions",
      "description": "{seoDescription}",
      "brand": {
        "@type": "Brand",
        "name": "Hikvision Dubai"
      },
      "offers": {
        "@type": "AggregateOffer",
        "priceCurrency": "AED",
        "availability": "https://schema.org/InStock"
      },
      "image": "{image}",
      "additionalProperty": [
        {
          "@type": "PropertyValue",
          "name": "Expert Installation",
          "value": "Professional setup and configuration by certified technicians"
        },
        {
          "@type": "PropertyValue",
          "name": "Support",
          "value": "24/7 technical assistance and monitoring"
        },
        {
          "@type": "PropertyValue",
          "name": "Warranty",
          "value": "Comprehensive warranty and maintenance plans"
        },
        ...feature.map(f => ({
          "@type": "PropertyValue",
          "name": f.data.name,
          "value": f.data.body
        }))
      ]
    }
  </script>
</head>
<section class="relative">
  <div class="container relative pt-10" style="background-color: #f1f7ff;">
    <div class="grid grid-cols-1 pb-5 text-center">
      <span class="bg-cyan-50 text-cyan-600 text-sm font-medium px-4 py-1 rounded-full mb-4 inline-block mx-auto">
        Premium Security Solutions
      </span>
      
      <h2 class="font-bold text-3xl md:text-4xl text-slate-900 leading-tight mb-6">
        Hikvision Technology
        <span class="text-cyan-600 block mt-2">Securing Your Future</span>
      </h2>
      
      <p class="text-slate-600 text-base md:text-lg max-w-3xl mx-auto leading-relaxed px-4 md:px-0">
        We provide great pricing on all Hikvision products, so you can get your hands on top-notch security technology without breaking the bank. With us, you'll find the best bang for your buck, all while ensuring you don't skimp on quality or performance. Our extensive selection features state-of-the-art surveillance cameras, smart security systems, and cutting-edge access control solutions.
      </p>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mt-8 max-w-4xl mx-auto text-left px-8">
        <div class="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 border-l-4 border-cyan-500 max-w-xs mx-auto sm:mx-0 w-full">
          <h3 class="font-semibold text-slate-900 mb-2 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-cyan-600 mr-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            Expert Installation
          </h3>
          <p class="text-slate-600">Professional setup and configuration by certified technicians</p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 border-l-4 border-cyan-500 max-w-xs mx-auto sm:mx-0 w-full">
          <h3 class="font-semibold text-slate-900 mb-2 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-cyan-600 mr-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            24/7 Support
          </h3>
          <p class="text-slate-600">Round-the-clock technical assistance and monitoring</p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 border-l-4 border-cyan-500 max-w-xs mx-auto sm:mx-0 w-full">
          <h3 class="font-semibold text-slate-900 mb-2 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-cyan-600 mr-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            Warranty Coverage
          </h3>
          <p class="text-slate-600">Comprehensive warranty and maintenance plans</p>
        </div>
      </div>  
      <div class="mt-10">
        <a href="#products" class="inline-flex items-center justify-center px-8 py-3 text-base font-medium text-white bg-gradient-to-r from-cyan-600 to-cyan-500 hover:from-cyan-500 hover:to-cyan-400 rounded-lg transition duration-300 ease-in-out transform hover:-translate-y-1 shadow-lg hover:shadow-xl">
          Explore Products
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </a>
      </div>
    </div>
  </div>
  <div class="relative">
    <div class="grid lg:grid-cols-4 md:grid-cols-2 sm:grid-cols-2 grid-cols-1 gap-6 pt-6 p-2 pb-12 mobile-feature-carousel" style="background-color: #f1f7ff;">
      {feature.map((feature, index) => (
        <div 
          class="group perspective h-[400px] w-full cursor-pointer feature-card" 
          data-index={index}
        >
          <div class="relative preserve-3d duration-1000 ease-in-out h-full w-full">
            <div class="absolute w-full h-full backface-hidden">
              <div class="rounded-xl shadow-lg hover:shadow-2xl transform hover:-translate-y-1 transition-all duration-300 relative bg-gradient-to-br from-[#e5edf7] to-[#e5edf7] p-8 overflow-hidden h-full border border-slate-700/50">
                <div class="flex items-center justify-center size-24 text-white text-center rounded-full p-4 bg-gradient-to-r from-cyan-600 to-cyan-500 group-hover:from-cyan-500 group-hover:to-cyan-400 transition-colors duration-500 shadow-lg">
                  <p class="font-bold">{feature.data.name}</p>
                </div>
                <div class="content mt-8 relative z-10">
                  <a href="/productsnew" class="title text-xl font-bold text-black hover:text-cyan-600 transition-colors duration-300 block mb-4">
                    {feature.data.title}
                  </a>
                  <p class="text-gray-700 leading-relaxed text-justify text-sm font-['Poppins',_sans-serif]">{feature.data.body}</p>
                </div>
              </div>
            </div>
            <div class="absolute inset-0 h-full w-full [transform:rotateY(180deg)] backface-hidden">
              <div class="rounded-xl shadow-lg transform transition-all duration-300 relative bg-gradient-to-br from-[#e5edf7] to-[#e5edf7] p-8 overflow-hidden h-full border border-slate-700/50">
                <div class="flex flex-col items-center justify-center h-full text-black">
                  <h3 class="text-2xl font-bold mb-4">{feature.data.name}</h3>
                  <p class="text-gray-700 text-center text-sm font-['Poppins',_sans-serif]">{feature.data.body}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
    <div class="mobile-navigation-buttons absolute bottom-4 left-1/2 transform -translate-x-1/2 flex gap-4">
      <button id="prevButton" class="bg-white text-gray-700 flex items-center justify-center rounded-xl shadow-md hover:shadow-lg transition-all duration-300" style="width: 44px; height: 44px; background: white; box-shadow: 0 5px 15px rgba(0,0,0,0.08);">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="stroke: #06adcc; stroke-width: 2;">
          <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
        </svg>
      </button>
      <button id="nextButton" class="bg-white text-gray-700 flex items-center justify-center rounded-xl shadow-md hover:shadow-lg transition-all duration-300" style="width: 44px; height: 44px; background: white; box-shadow: 0 5px 15px rgba(0,0,0,0.08);">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="stroke: #06adcc; stroke-width: 2;">
          <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" />
        </svg>
      </button>
    </div>
</section>

<style>
  .perspective { perspective: 1000px; }
  .preserve-3d { transform-style: preserve-3d; }
  .backface-hidden { backface-visibility: hidden; }
  .flip { transform: rotateY(180deg); }

  /* Hide navigation buttons on larger screens */
  .mobile-navigation-buttons {
    display: none;
  }

  /* Show navigation buttons only on mobile screens */
  @media (max-width: 767px) {
    .mobile-navigation-buttons {
      display: flex;
    }

    /* Hide all cards except the first one on mobile */
    .feature-card {
      display: none;
    }

    .feature-card[data-index="0"] {
      display: block;
    }
  }
.mobile-navigation-buttons {
  margin-top: 20px;
  bottom: -5px; 
}

/* Add more space at the bottom of the card container */
.mobile-feature-carousel {
  padding-bottom: 3rem !important; 
}

  @media (min-width: 768px) {
    .feature-card {
      display: block !important; /* Override any inline styles */
    }
  }
</style>

<script>
  // Flip-flop functionality for larger screens
  if (window.innerWidth > 767) { // Only apply this logic on screens larger than mobile
    document.querySelectorAll('.group').forEach(card => {
      card.addEventListener('click', () => {
        const relativeElement = card.querySelector('.relative');
        if (relativeElement) {
          relativeElement.classList.toggle('flip');
        }
      });
    });
  }

  // Mobile card navigation logic
  let currentCardIndex = 0;
  const cards = document.querySelectorAll('.feature-card');
  const totalCards = cards.length;

  const updateCardVisibility = () => {
    if (window.innerWidth <= 767) { // Only apply this logic on mobile screens
      cards.forEach((card, index) => {
        (card as HTMLElement).style.display = index === currentCardIndex ? 'block' : 'none';
      });
    }
  };

  const prevButton = document.getElementById('prevButton');
  const nextButton = document.getElementById('nextButton');

  if (prevButton && nextButton) { // Check if buttons exist
    prevButton.addEventListener('click', () => {
      currentCardIndex = (currentCardIndex - 1 + totalCards) % totalCards;
      updateCardVisibility();
    });

    nextButton.addEventListener('click', () => {
      currentCardIndex = (currentCardIndex + 1) % totalCards;
      updateCardVisibility();
    });
  }

  // Initial visibility update
  updateCardVisibility();

  // Update visibility on window resize
  window.addEventListener('resize', () => {
    updateCardVisibility();

    // Reapply flip-flop logic if screen size changes
    if (window.innerWidth > 767) {
      document.querySelectorAll('.group').forEach(card => {
        card.addEventListener('click', () => {
          const relativeElement = card.querySelector('.relative');
          if (relativeElement) {
            relativeElement.classList.toggle('flip');
          }
        });
      });
    }
  });
</script>
---
import { Image } from "astro:assets";
import hikvision from "../assets/images/hik.png";
import sample from "../assets/images/hikviison.jpg";
import cam from "../assets/images/cam.png";

// Data structure for card content
const cardData = [
  {
    id: "security-modal",
    title: "Premium Security Solutions",
    description:
      "Our comprehensive range of Hikvision products delivers cutting-edge security technology backed by expert support and installation services.",
    imageSrc: hikvision,
    imageAlt: "Hikvision Security Solutions",
    details: [
      "High-resolution security cameras",
      "Advanced DVR and NVR systems",
      "Professional installation services",
      "24/7 technical support",
      "Custom security system design",
    ],
  },
  {
    id: "surveillance-modal",
    title: "Advanced Surveillance",
    description:
      "State-of-the-art cameras and monitoring systems designed for optimal performance in any environment.",
    imageSrc: sample,
    imageAlt: "Advanced Surveillance Systems",
    details: [
      "4K Ultra HD resolution",
      "Night vision capabilities",
      "Smart motion detection",
      "Cloud storage integration",
      "Mobile monitoring apps",
    ],
  },
  {
    id: "access-modal",
    title: "Smart Access Control",
    description:
      "Next-generation biometric systems featuring advanced facial recognition and fingerprint technology.",
    imageSrc: cam,
    imageAlt: "Smart Access Control",
    details: [
      "Facial recognition technology",
      "Fingerprint scanning",
      "Multi-factor authentication",
      "Time attendance tracking",
      "Integration with security systems",
    ],
  },
  {
    id: "accesss-modal",
    title: "Smart Accessss Control",
    description:
      "Next-generation biometric systems featuring advanced facial recognition and fingerprint technology.",
    imageSrc: cam,
    imageAlt: "Smart Access Control",
    details: [
      "Facial recognition technology",
      "Fingerprint scanning",
      "Multi-factor authentication",
      "Time attendance tracking",
      "Integration with security systems",
    ],
  },
];
---
<section
  class="relative py-16 bg-gradient-to-b from-slate-900 to-slate-800 overflow-hidden"
>
  <!-- Background Pattern -->
  <div class="absolute inset-0 opacity-10">
    <div
      class="absolute inset-0"
      style="background-image: url('data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.4'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');"
    >
    </div>
  </div>
  <div class="container mx-auto px-4 relative">
    <!-- Animated Header Section -->
    <div class="text-center mb-12 relative">
      <div class="inline-block">
        <span
          class="absolute -top-4 left-0 w-full h-1 bg-gradient-to-r from-blue-500 to-cyan-400 animate-pulse"
        ></span>
        <h2 class="text-4xl font-bold text-white mb-4 leading-tight">
          Leading Hikvision Distributor
          <span
            class="text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-cyan-300"
            >in Dubai</span
          >
        </h2>
        <span
          class="absolute -bottom-4 right-0 w-full h-1 bg-gradient-to-r from-blue-500 to-cyan-400 animate-pulse"
        ></span>
      </div>
      <p class="text-slate-300 max-w-3xl mx-auto text-base mt-6 leading-relaxed">
        Experience unparalleled security solutions with Dubai's premier
        Hikvision partner. Setting new standards in innovation, reliability, and
        customer service.
      </p>
    </div>
    <!-- Feature Cards -->
    <div class="grid lg:grid-cols-4 gap-6 mt-12">
      {
        cardData.map((card) => (
          <div class="group relative bg-white/5 backdrop-blur-xl rounded-lg overflow-hidden border border-white/10 hover:border-blue-500/50 transition-all duration-500 shadow-md hover:shadow-lg">
            <div class="absolute inset-0 bg-gradient-to-br from-blue-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
            <div class="h-48 w-full overflow-hidden relative">
              <Image
                src={card.imageSrc}
                alt={card.imageAlt}
                class="w-full h-full object-cover object-center"
                width="400"
                height="300"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-slate-900/90 to-transparent" />
              <button
                class="modal-button absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-blue-600 text-white px-6 py-2 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                data-modal={card.id}
              >
                VIEW DETAILS
              </button>
            </div>
            <div class="p-6 relative">
              <h3 class="text-xl font-bold text-white mb-3 group-hover:text-blue-400 transition-colors">
                {card.title}
              </h3>
              <p class="text-slate-300 leading-relaxed text-sm">{card.description}</p>
            </div>
          </div>
        ))
      }
    </div>
  </div>
  <!-- Modals -->
  {
    cardData.map((card) => (
      <div id={card.id} class="modal fixed inset-0 z-50 hidden">
        <div class="modal-overlay absolute inset-0 bg-black opacity-50" />
        <div class="modal-container bg-slate-900 w-11/12 md:max-w-xl mx-auto rounded-lg shadow-lg z-50 overflow-y-auto absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2">
          <div class="modal-content py-4 text-left px-4">
            <div class="flex justify-between items-center pb-2">
              <p class="text-xl font-bold text-white">{card.title}</p>
              <button class="modal-close cursor-pointer z-50">
                <svg
                  class="fill-current text-white"
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 18 18"
                >
                  <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z" />
                </svg>
              </button>
            </div>
            <div class="my-4 text-slate-300">
              <p class="mb-3 text-sm">{card.description}</p>
              <ul class="list-disc ml-4 space-y-1 text-sm">
                {card.details.map((detail) => (
                  <li>{detail}</li>
                ))}
              </ul>
            </div>
          </div>
        </div>
      </div>
    ))
  }
</section>
<script>
  // Existing modal functionality
  document.addEventListener("DOMContentLoaded", () => {
    const modalButtons = document.querySelectorAll(".modal-button");
    const modalCloses = document.querySelectorAll(".modal-close");
    const modalOverlays = document.querySelectorAll(".modal-overlay");

    // Open modal
    modalButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const modalId = button.getAttribute("data-modal");
        if (modalId) {
          const modal = document.getElementById(modalId);
          if (modal) {
            modal.classList.remove("hidden");
            document.body.style.overflow = "hidden";
          }
        }
      });
    });

    // Close modal functions
    const closeModal = (modal: HTMLElement | null) => {
      if (modal) {
        modal.classList.add("hidden");
        document.body.style.overflow = "auto";
      }
    };

    // Close on X button click
    modalCloses.forEach((close) => {
      close.addEventListener("click", () => {
        const modal = close.closest(".modal") as HTMLElement | null; // Typecast to HTMLElement | null
        if (modal) {
          closeModal(modal);
        }
      });
    });

    // Close on overlay click
    modalOverlays.forEach((overlay) => {
      overlay.addEventListener("click", () => {
        const modal = overlay.closest(".modal") as HTMLElement | null; // Typecast to HTMLElement | null
        if (modal) {
          closeModal(modal);
        }
      });
    });

    // Close on Escape key press
    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape") {
        document.querySelectorAll(".modal:not(.hidden)").forEach((modal) => {
          closeModal(modal as HTMLElement); // Typecast to HTMLElement
        });
      }
    });
  });
</script>
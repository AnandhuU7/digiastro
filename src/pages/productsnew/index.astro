---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import ProductsCard from "../../components/ProductsCard.astro";

// Fetching all the product-related content and sorting it by id
const products: CollectionEntry<"products">[] = (
  await getCollection("products")
).sort((a, b) => a.data.id - b.data.id);

// Filter products by category
const productNetwork = products.filter((product) => product.data.category === "Network Products");
const productTurboHD = products.filter((product) => product.data.category === "Turbo HD Products");
const productAccessControl = products.filter((product) => product.data.category === "Access Control Products");
const productLEDPanels = products.filter((product) => product.data.category === "LED Panels");

// Define categories
const categories = [
  { id: "Network Products", name: "Network Products" },
  { id: "Turbo HD Products", name: "Turbo HD Products" },
  { id: "Access Control Products", name: "Access Control Products" },
  { id: "LED Panels", name: "LED Panels" },
];

// Get the category from URL params, default to "Network Products" if none specified
const url = new URL(Astro.request.url);
const activeCategory = url.searchParams.get('category') || "Network Products";

// Page metadata
const title = "Hikvision National Distributor in Dubai | CCTV, Access Control Systems, DVR, NVR Dubai";
const description = "Browse our comprehensive range of security solutions including CCTV cameras, DVR systems, and access control from Hikvision. Official distributor in Dubai offering professional security equipment.";
const keywords = "Hikvision Dubai, CCTV cameras, security systems, DVR, NVR, access control, security solutions, surveillance cameras, Dubai security distributor";

// Structured data for SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  itemListElement: products.map((product, index) => ({
    "@type": "ListItem",
    position: index + 1,
    item: {
      "@type": "Product",
      name: product.data.title,
      description: product.data.features,
      image: product.data.imgCard.src,
    },
  })),
};
---

<Layout title={title} description={description} keywords={keywords}>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-6 text-center text-teal">Discover Our Products</h1>

    <!-- Search Bar -->
    <div class="mb-10 max-w-2xl mx-auto">
      <div class="relative">
        <input
          id="searchInput"
          type="text"
          placeholder="Search for products..."
          class="w-full py-4 px-6 rounded-full bg-white border-2 border-teal shadow-md focus:outline-none focus:ring-2 focus:ring-teal focus:border-transparent transition-all duration-300"
        />
        <button 
          id="searchButton"
          class="absolute right-3 top-1/2 transform -translate-y-1/2 bg-teal hover:bg-teal-dark text-white p-3 rounded-full transition-all duration-300"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </button>
      </div>
    </div>

    <div class="flex flex-col md:flex-row gap-8">
      <!-- Categories Sidebar -->
      <div class="w-full md:w-1/4 lg:w-1/5">
        <div class="bg-gradient-to-br from-gray-50 to-gray-100 p-6 rounded-xl shadow-md hover:shadow-lg transition-all duration-300">
          <h2 class="text-2xl font-semibold mb-6 text-gray-800">Categories</h2>
          <ul class="space-y-3">
            {categories.map((category) => (
              <li class="category-item">
                <a
                  href={`/productsnew?category=${encodeURIComponent(category.id)}`}
                  class={`block p-3 rounded-lg transition-all duration-300 ${
                    activeCategory === category.id 
                      ? 'bg-teal text-white font-medium shadow-md' 
                      : 'bg-white hover:bg-gray-100 shadow-sm'
                  }`}
                >
                  {category.name}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </div>

      <!-- Products Grid -->
      <div class="w-full md:w-3/4 lg:w-4/5">
        <div id="productsGrid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
          {products
            .filter((product) => product.data.category === activeCategory)
            .map((product) => (
              <div class="product-card bg-white rounded-xl overflow-hidden shadow-md hover:shadow-xl transition-all duration-500">
                <div class="relative overflow-hidden group">
                  <div class="h-56 bg-gray-100 overflow-hidden">
                    <img
                      src={product.data.imgCard.src}
                      alt={product.data.imgAlt}
                      class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                    />
                  </div>
                  <div class="absolute top-3 right-3">
                    <button class="favorite-btn bg-white p-2 rounded-full shadow-md hover:shadow-lg transition-all hover:scale-110 text-gray-700 hover:text-teal">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                      </svg>
                    </button>
                  </div>
                </div>
                <div class="p-5">
                  <div class="flex justify-between items-center mb-3">
                    <h3 class="font-semibold text-lg text-gray-800">{product.data.title}</h3>
                  </div>
                  <p class="text-gray-500 text-sm mb-4">Category: {product.data.category}</p>
                  <a 
                    href={`/productsnew/${product.slug}`}
                    class="block w-full"
                  >
                    <button class="more-details w-full bg-teal text-white py-3 rounded-lg font-medium hover:bg-teal-dark transition-all duration-300 transform hover:-translate-y-1 shadow-md hover:shadow-lg">
                      More Details
                    </button>
                  </a>
                </div>
              </div>
            ))}
        </div>

        <!-- Fallback message if no products -->
        {products.filter((product) => product.data.category === activeCategory).length === 0 && (
          <div class="text-center py-12">
            <p class="text-gray-500">No products found in this category.</p>
          </div>
        )}
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Your custom styles remain unchanged */
  :root {
    --teal: #32869f;
    --teal-dark: #286b80;
  }

  .bg-teal {
    background-color: var(--teal);
  }

  .bg-teal-dark {
    background-color: var(--teal-dark);
  }

  .text-teal {
    color: var(--teal);
  }

  .border-teal {
    border-color: var(--teal);
  }

  .hover\:bg-teal-dark:hover {
    background-color: var(--teal-dark);
  }

  .hover\:text-teal:hover {
    color: var(--teal);
  }

  .focus\:ring-teal:focus {
    --tw-ring-color: var(--teal);
  }

  /* Animation for category items */
  .category-item {
    animation: fadeInLeft 0.5s ease forwards;
    opacity: 0;
  }

  .category-item:nth-child(1) { animation-delay: 0.1s; }
  .category-item:nth-child(2) { animation-delay: 0.2s; }
  .category-item:nth-child(3) { animation-delay: 0.3s; }
  .category-item:nth-child(4) { animation-delay: 0.4s; }
  .category-item:nth-child(5) { animation-delay: 0.5s; }
  .category-item:nth-child(6) { animation-delay: 0.6s; }
  .category-item:nth-child(7) { animation-delay: 0.7s; }
  .category-item:nth-child(8) { animation-delay: 0.8s; }

  /* Animation for product cards */
  .product-card {
    animation: fadeInUp 0.6s ease forwards;
    opacity: 0;
    animation-delay: calc(0.15s * var(--index, 0));
  }

  .product-card:nth-child(1) { --index: 1; }
  .product-card:nth-child(2) { --index: 2; }
  .product-card:nth-child(3) { --index: 3; }
  .product-card:nth-child(4) { --index: 4; }
  .product-card:nth-child(5) { --index: 5; }
  .product-card:nth-child(6) { --index: 6; }
  .product-card:nth-child(7) { --index: 7; }
  .product-card:nth-child(8) { --index: 8; }

  /* Pulse animation for More Details button */
  .more-details:hover {
    animation: pulse 1.5s infinite;
  }

  /* Animation keyframes */
  @keyframes fadeInLeft {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(50, 134, 159, 0.4);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(50, 134, 159, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(50, 134, 159, 0);
    }
  }
</style>

<script>
  // Optional JavaScript for additional functionality
  document.addEventListener('astro:page-load', () => {
  // Initialize animations
  const productCards = document.querySelectorAll<HTMLElement>('.product-card');
  productCards.forEach((card, index) => {
    card.style.setProperty('--index', (index + 1).toString());
  });

  // Add hover effects
  productCards.forEach((card) => {
    card.addEventListener('mouseenter', function (this: HTMLElement) {
      this.classList.add('shadow-lg');
      this.style.transform = 'translateY(-5px)';
    });

    card.addEventListener('mouseleave', function (this: HTMLElement) {
      this.classList.remove('shadow-lg');
      this.style.transform = 'translateY(0)';
    });
  });
});
</script>